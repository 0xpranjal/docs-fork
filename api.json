{
  "openapi": "3.0.0",
  "paths": {
    "/call": {
      "get": {
        "operationId": "CallController_findAll",
        "summary": "List Calls",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Call" }
                }
              }
            }
          }
        },
        "tags": ["Calls"]
      }
    },
    "/call/{id}": {
      "get": {
        "operationId": "CallController_findOne",
        "summary": "Get Call",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Call" }
              }
            }
          }
        },
        "tags": ["Calls"]
      }
    },
    "/call/phone": {
      "post": {
        "operationId": "CallController_createPhoneCall",
        "summary": "Create Phone Call",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateOutboundCallDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Call" }
              }
            }
          }
        },
        "tags": ["Calls"]
      }
    },
    "/call/web": {
      "post": {
        "operationId": "CallController_createWebCall",
        "summary": "Create Web Call",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateWebCallDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WebCallResponseDto" }
              }
            }
          }
        },
        "tags": ["Calls"]
      }
    },
    "/assistant": {
      "post": {
        "operationId": "AssistantController_create",
        "summary": "Create Assistant",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateAssistantDTO" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Assistant" }
              }
            }
          }
        },
        "tags": ["Assistants"]
      },
      "get": {
        "operationId": "AssistantController_findAll",
        "summary": "List Assistants",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Assistant" }
                }
              }
            }
          }
        },
        "tags": ["Assistants"]
      }
    },
    "/assistant/{id}": {
      "get": {
        "operationId": "AssistantController_findOne",
        "summary": "Get Assistant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Assistant" }
              }
            }
          }
        },
        "tags": ["Assistants"]
      },
      "patch": {
        "operationId": "AssistantController_update",
        "summary": "Update Assistant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateAssistantDTO" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Assistant" }
              }
            }
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Assistant" }
              }
            }
          }
        },
        "tags": ["Assistants"]
      },
      "delete": {
        "operationId": "AssistantController_remove",
        "summary": "Delete Assistant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "" },
          "204": { "description": "" }
        },
        "tags": ["Assistants"]
      }
    },
    "/phone-number/buy": {
      "post": {
        "operationId": "PhoneNumberController_buy",
        "summary": "Buy Phone Number",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BuyPhoneNumberDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PhoneNumber" }
              }
            }
          }
        },
        "tags": ["Phone Numbers"]
      }
    },
    "/phone-number/import": {
      "post": {
        "operationId": "PhoneNumberController_import",
        "summary": "Import Twilio Number",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportTwilioPhoneNumberDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PhoneNumber" }
              }
            }
          }
        },
        "tags": ["Phone Numbers"]
      }
    },
    "/phone-number": {
      "get": {
        "operationId": "PhoneNumberController_findAll",
        "summary": "List Phone Numbers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PhoneNumber" }
                }
              }
            }
          }
        },
        "tags": ["Phone Numbers"]
      }
    },
    "/phone-number/{id}": {
      "get": {
        "operationId": "PhoneNumberController_findOne",
        "summary": "Get Phone Number",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PhoneNumber" }
              }
            }
          }
        },
        "tags": ["Phone Numbers"]
      },
      "patch": {
        "operationId": "PhoneNumberController_update",
        "summary": "Update Phone Number",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdatePhoneNumberDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PhoneNumber" }
              }
            }
          }
        },
        "tags": ["Phone Numbers"]
      },
      "delete": {
        "operationId": "PhoneNumberController_remove",
        "summary": "Delete Phone Number",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "" },
          "204": { "description": "" }
        },
        "tags": ["Phone Numbers"]
      }
    }
  },
  "info": {
    "title": "Vapi API",
    "description": "API for making voice assistants",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "PhoneCallParams": {
        "type": "object",
        "properties": {
          "callSid": { "type": "string" },
          "status": { "type": "array", "items": { "type": "string" } },
          "customerPhoneNumber": { "type": "string" },
          "twilioPhoneNumber": { "type": "string" },
          "twilioAccountSid": { "type": "string" },
          "twilioAuthToken": { "type": "string" }
        },
        "required": [
          "customerPhoneNumber",
          "twilioPhoneNumber",
          "twilioAccountSid",
          "twilioAuthToken"
        ]
      },
      "Call": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["inboundPhoneCall", "outboundPhoneCall", "webCall"]
          },
          "id": { "type": "string" },
          "orgId": { "type": "string" },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" },
          "assistantId": { "type": "string" },
          "customerId": { "type": "string" },
          "phoneNumberId": { "type": "string" },
          "startedAt": { "type": "string" },
          "endedAt": { "type": "string" },
          "transcript": { "type": "string" },
          "recordingUrl": { "type": "string" },
          "cost": { "type": "number" },
          "summary": { "type": "string" },
          "assistantParams": { "type": "object" },
          "callParams": { "$ref": "#/components/schemas/PhoneCallParams" }
        },
        "required": [
          "type",
          "id",
          "orgId",
          "createdAt",
          "updatedAt",
          "startedAt"
        ]
      },
      "OpenAIFunctionParamaters": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "properties": { "type": "object" },
          "required": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["type", "properties"]
      },
      "OpenAIFunction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "This is the the name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64."
          },
          "description": {
            "type": "string",
            "description": "This is a description of what the function does, used by the AI to choose when and how to call the function."
          },
          "parameters": {
            "description": "These are the parameters the functions accepts, described as a JSON Schema object. See the [OpenAI guide](https://platform.openai.com/docs/guides/gpt/function-calling) for examples, and the [JSON Schema reference](https://json-schema.org/understanding-json-schema) for documentation about the format.\n\nTo describe a function that accepts no parameters, provide the value {\"type\": \"object\", \"properties\": {}}.",
            "allOf": [
              { "$ref": "#/components/schemas/OpenAIFunctionParamaters" }
            ]
          }
        },
        "required": ["name", "parameters"]
      },
      "CreateAssistantDTO": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "description": "This is the OpenAI model that will be used.",
            "enum": ["gpt-4-32k", "gpt-4", "gpt-3.5-turbo-16k", "gpt-3.5-turbo"]
          },
          "voice": {
            "type": "string",
            "description": "This is the voice that will be used.\n\nPro Voices: `*-11labs`, `*-playht`\n\nBasic Voices: `*-rimeai`, `*-azure`",
            "enum": [
              "jennifer-playht",
              "melissa-playht",
              "will-playht",
              "jack-playht",
              "ruby-playht",
              "davis-playht",
              "donna-playht",
              "burt-11labs",
              "andrea-11labs",
              "phillip-11labs",
              "steve-11labs",
              "joseph-11labs",
              "myra-11labs",
              "paula-11labs",
              "ryan-11labs",
              "drew-11labs",
              "paul-11labs",
              "mrb-11labs",
              "matilda-11labs",
              "kai-rimeai",
              "zion-rimeai",
              "xavier-rimeai",
              "marty-rimeai",
              "hudson-rimeai",
              "savannah-rimeai",
              "colette-rimeai",
              "daphne-rimeai",
              "aurora-rimeai",
              "nova-rimeai",
              "davis-azure",
              "jenny-azure",
              "aria-azure",
              "steffan-azure",
              "sara-azure",
              "jason-azure"
            ]
          },
          "name": {
            "type": "string",
            "description": "This is the assistant’s name, just for your own reference."
          },
          "context": {
            "type": "string",
            "description": "This is the system prompt, which sets the objective and background before the call."
          },
          "functions": {
            "description": "These are the functions that the assistant can execute during the call.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/OpenAIFunction" }
          },
          "callbackUrl": {
            "type": "string",
            "description": "This is the URL Vapi will send GET / POST requests for retrieving context, function calling, and end-of-call reports. All requests will be sent with customerPhoneNumber and all the assistant parameters. You can find more details in the Function Calling documentation."
          },
          "forwardingPhoneNumber": {
            "type": "string",
            "description": "This is the number the assistant will transfer to if it runs into any issues."
          },
          "firstMessage": {
            "type": "string",
            "description": "This is the first message that the assistant will say. If unspecified, it will wait for the user to speak."
          },
          "recordingEnabled": {
            "type": "boolean",
            "description": "Whether the call should be recorded."
          },
          "voicemailEnabled": {
            "type": "boolean",
            "description": "Whether to leave a voicemail if a phone call isn't picked up."
          }
        }
      },
      "CreateOutboundCallDto": {
        "type": "object",
        "properties": {
          "assistantId": {
            "type": "string",
            "description": "This is the assistant that will be used for the call. To create a transient assistant, use `assistant` instead."
          },
          "assistant": {
            "description": "This is the assistant that will be used for the call. To use an existing assistant, use `assistantId` instead.",
            "allOf": [{ "$ref": "#/components/schemas/CreateAssistantDTO" }]
          },
          "phoneNumberId": {
            "type": "string",
            "description": "This is the phone number that will be used for the call."
          },
          "customerPhoneNumber": {
            "type": "string",
            "description": "This is the number that will be called."
          }
        },
        "required": ["phoneNumberId", "customerPhoneNumber"]
      },
      "CreateWebCallDto": {
        "type": "object",
        "properties": {
          "assistantId": {
            "type": "string",
            "description": "This is the assistant that will be used for the call. To create a transient assistant, use `assistant` instead."
          },
          "assistant": {
            "description": "This is the assistant that will be used for the call. To use an existing assistant, use `assistantId` instead.",
            "allOf": [{ "$ref": "#/components/schemas/CreateAssistantDTO" }]
          }
        }
      },
      "WebCallResponseDto": {
        "type": "object",
        "properties": { "url": { "type": "string" } },
        "required": ["url"]
      },
      "Assistant": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "description": "This is the OpenAI model that will be used.",
            "enum": ["gpt-4-32k", "gpt-4", "gpt-3.5-turbo-16k", "gpt-3.5-turbo"]
          },
          "voice": {
            "type": "string",
            "description": "This is the voice that will be used.\n\nPro Voices: `*-11labs`, `*-playht`\n\nBasic Voices: `*-rimeai`, `*-azure`",
            "enum": [
              "jennifer-playht",
              "melissa-playht",
              "will-playht",
              "jack-playht",
              "ruby-playht",
              "davis-playht",
              "donna-playht",
              "burt-11labs",
              "andrea-11labs",
              "phillip-11labs",
              "steve-11labs",
              "joseph-11labs",
              "myra-11labs",
              "paula-11labs",
              "ryan-11labs",
              "drew-11labs",
              "paul-11labs",
              "mrb-11labs",
              "matilda-11labs",
              "kai-rimeai",
              "zion-rimeai",
              "xavier-rimeai",
              "marty-rimeai",
              "hudson-rimeai",
              "savannah-rimeai",
              "colette-rimeai",
              "daphne-rimeai",
              "aurora-rimeai",
              "nova-rimeai",
              "davis-azure",
              "jenny-azure",
              "aria-azure",
              "steffan-azure",
              "sara-azure",
              "jason-azure"
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the assistant."
          },
          "orgId": {
            "type": "string",
            "description": "Unique identifier for the organization that this assistant belongs to."
          },
          "createdAt": {
            "type": "string",
            "description": "ISO 8601 date-time string of when the assistant was created."
          },
          "updatedAt": {
            "type": "string",
            "description": "ISO 8601 date-time string of when the assistant was last updated."
          },
          "name": {
            "type": "string",
            "description": "This is the assistant’s name, just for your own reference."
          },
          "context": {
            "type": "string",
            "description": "This is the system prompt, which sets the objective and background before the call."
          },
          "functions": {
            "description": "These are the functions that the assistant can execute during the call.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/OpenAIFunction" }
          },
          "callbackUrl": {
            "type": "string",
            "description": "This is the URL Vapi will send GET / POST requests for retrieving context, function calling, and end-of-call reports. All requests will be sent with customerPhoneNumber and all the assistant parameters. You can find more details in the Function Calling documentation."
          },
          "forwardingPhoneNumber": {
            "type": "string",
            "description": "This is the number the assistant will transfer to if it runs into any issues."
          },
          "firstMessage": {
            "type": "string",
            "description": "This is the first message that the assistant will say. If unspecified, it will wait for the user to speak."
          },
          "recordingEnabled": {
            "type": "boolean",
            "description": "Whether the call should be recorded."
          },
          "voicemailEnabled": {
            "type": "boolean",
            "description": "Whether to leave a voicemail if a phone call isn't picked up."
          }
        },
        "required": ["id", "orgId", "createdAt", "updatedAt"]
      },
      "UpdateAssistantDTO": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "description": "This is the OpenAI model that will be used.",
            "enum": ["gpt-4-32k", "gpt-4", "gpt-3.5-turbo-16k", "gpt-3.5-turbo"]
          },
          "voice": {
            "type": "string",
            "description": "This is the voice that will be used.\n\nPro Voices: `*-11labs`, `*-playht`\n\nBasic Voices: `*-rimeai`, `*-azure`",
            "enum": [
              "jennifer-playht",
              "melissa-playht",
              "will-playht",
              "jack-playht",
              "ruby-playht",
              "davis-playht",
              "donna-playht",
              "burt-11labs",
              "andrea-11labs",
              "phillip-11labs",
              "steve-11labs",
              "joseph-11labs",
              "myra-11labs",
              "paula-11labs",
              "ryan-11labs",
              "drew-11labs",
              "paul-11labs",
              "mrb-11labs",
              "matilda-11labs",
              "kai-rimeai",
              "zion-rimeai",
              "xavier-rimeai",
              "marty-rimeai",
              "hudson-rimeai",
              "savannah-rimeai",
              "colette-rimeai",
              "daphne-rimeai",
              "aurora-rimeai",
              "nova-rimeai",
              "davis-azure",
              "jenny-azure",
              "aria-azure",
              "steffan-azure",
              "sara-azure",
              "jason-azure"
            ]
          },
          "name": {
            "type": "string",
            "description": "This is the assistant’s name, just for your own reference."
          },
          "context": {
            "type": "string",
            "description": "This is the system prompt, which sets the objective and background before the call."
          },
          "functions": {
            "description": "These are the functions that the assistant can execute during the call.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/OpenAIFunction" }
          },
          "callbackUrl": {
            "type": "string",
            "description": "This is the URL Vapi will send GET / POST requests for retrieving context, function calling, and end-of-call reports. All requests will be sent with customerPhoneNumber and all the assistant parameters. You can find more details in the Function Calling documentation."
          },
          "forwardingPhoneNumber": {
            "type": "string",
            "description": "This is the number the assistant will transfer to if it runs into any issues."
          },
          "firstMessage": {
            "type": "string",
            "description": "This is the first message that the assistant will say. If unspecified, it will wait for the user to speak."
          },
          "recordingEnabled": {
            "type": "boolean",
            "description": "Whether the call should be recorded."
          },
          "voicemailEnabled": {
            "type": "boolean",
            "description": "Whether to leave a voicemail if a phone call isn't picked up."
          }
        }
      },
      "BuyPhoneNumberDto": {
        "type": "object",
        "properties": {
          "areaCode": {
            "type": "string",
            "description": "This is the area code of the phone number to purchase."
          },
          "assistantId": { "type": "string" }
        },
        "required": ["areaCode"]
      },
      "PhoneNumber": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" },
          "orgId": { "type": "string" },
          "stripeSubscriptionId": { "type": "string" },
          "number": { "type": "string" },
          "assistantId": { "type": "string" },
          "twilioAccountSid": { "type": "string" },
          "twilioAuthToken": { "type": "string" }
        },
        "required": ["id", "createdAt", "updatedAt", "orgId", "number"]
      },
      "ImportTwilioPhoneNumberDto": {
        "type": "object",
        "properties": {
          "twilioAccountSid": {
            "type": "string",
            "description": "This is the area code of the phone number to purchase."
          },
          "twilioAuthToken": { "type": "string" },
          "twilioPhoneNumber": { "type": "string" },
          "assistantId": { "type": "string" }
        },
        "required": ["twilioAccountSid", "twilioAuthToken", "twilioPhoneNumber"]
      },
      "UpdatePhoneNumberDto": {
        "type": "object",
        "properties": {
          "assistantId": {
            "type": "string",
            "description": "This is the assistant that will be used to handle inbound calls to this phone number."
          }
        }
      }
    }
  }
}
