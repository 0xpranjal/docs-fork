{
  "openapi": "3.0.0",
  "paths": {
    "/assistant": {
      "post": {
        "operationId": "AssistantController_create",
        "summary": "Create Assistant",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateAssistantDTO" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Assistant" }
              }
            }
          }
        },
        "tags": ["Assistants"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "AssistantController_findAll",
        "summary": "List Assistants",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Assistant" }
                }
              }
            }
          }
        },
        "tags": ["Assistants"],
        "security": [{ "bearer": [] }]
      }
    },
    "/assistant/{id}": {
      "get": {
        "operationId": "AssistantController_findOne",
        "summary": "Get Assistant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Assistant" }
              }
            }
          }
        },
        "tags": ["Assistants"],
        "security": [{ "bearer": [] }]
      },
      "patch": {
        "operationId": "AssistantController_update",
        "summary": "Update Assistant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateAssistantDTO" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Assistant" }
              }
            }
          }
        },
        "tags": ["Assistants"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "AssistantController_remove",
        "summary": "Delete Assistant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Assistant" }
              }
            }
          }
        },
        "tags": ["Assistants"],
        "security": [{ "bearer": [] }]
      }
    },
    "/call": {
      "get": {
        "operationId": "CallController_findAll",
        "summary": "List Calls",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Call" }
                }
              }
            }
          }
        },
        "tags": ["Calls"],
        "security": [{ "bearer": [] }]
      }
    },
    "/call/{id}": {
      "get": {
        "operationId": "CallController_findOne",
        "summary": "Get Call",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Call" }
              }
            }
          }
        },
        "tags": ["Calls"],
        "security": [{ "bearer": [] }]
      }
    },
    "/call/phone": {
      "post": {
        "operationId": "CallController_createPhoneCall",
        "summary": "Create Phone Call",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateOutboundCallDTO" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Call" }
              }
            }
          }
        },
        "tags": ["Calls"],
        "security": [{ "bearer": [] }]
      }
    },
    "/call/web": {
      "post": {
        "operationId": "CallController_createWebCall",
        "summary": "Create Web Call",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateWebCallDTO" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Call" }
              }
            }
          }
        },
        "tags": ["Calls"],
        "security": [{ "bearer": [] }]
      }
    },
    "/credential": {
      "post": {
        "operationId": "CredentialController_create",
        "summary": "Create Credential",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateTwilioCredentialDTO",
                    "title": "TwilioCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateDeepgramCredentialDTO",
                    "title": "DeepgramCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateOpenAICredentialDTO",
                    "title": "OpenAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateTogetherAICredentialDTO",
                    "title": "TogetherAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateAnyscaleCredentialDTO",
                    "title": "AnyscaleCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateOpenRouterCredentialDTO",
                    "title": "OpenRouterCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreatePerplexityAICredentialDTO",
                    "title": "PerplexityAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateDeepInfraCredentialDTO",
                    "title": "DeepInfraCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateAzureOpenAICredentialDTO",
                    "title": "AzureOpenAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateCustomLLMCredentialDTO",
                    "title": "CustomLLMCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateElevenLabsCredentialDTO",
                    "title": "ElevenLabsCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreatePlayHTCredentialDTO",
                    "title": "PlayHTCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateRimeAICredentialDTO",
                    "title": "RimeAICredential"
                  }
                ],
                "discriminator": {
                  "propertyName": "provider",
                  "mapping": {
                    "twilio": "#/components/schemas/CreateTwilioCredentialDTO",
                    "deepgram": "#/components/schemas/CreateDeepgramCredentialDTO",
                    "openai": "#/components/schemas/CreateOpenAICredentialDTO",
                    "azure-openai": "#/components/schemas/CreateAzureOpenAICredentialDTO",
                    "together-ai": "#/components/schemas/CreateTogetherAICredentialDTO",
                    "anyscale": "#/components/schemas/CreateAnyscaleCredentialDTO",
                    "openrouter": "#/components/schemas/CreateOpenRouterCredentialDTO",
                    "perplexity-ai": "#/components/schemas/CreatePerplexityAICredentialDTO",
                    "deepinfra": "#/components/schemas/CreateDeepInfraCredentialDTO",
                    "custom-llm": "#/components/schemas/CreateCustomLLMCredentialDTO",
                    "11labs": "#/components/schemas/CreateElevenLabsCredentialDTO",
                    "playht": "#/components/schemas/CreatePlayHTCredentialDTO",
                    "rimeai": "#/components/schemas/CreateRimeAICredentialDTO"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TwilioCredential",
                      "title": "TwilioCredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepgramCredential",
                      "title": "DeepgramCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenAICredential",
                      "title": "OpenAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/TogetherAICredential",
                      "title": "TogetherAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/AnyscaleCredential",
                      "title": "AnyscaleCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenRouterCredential",
                      "title": "OpenRouterCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PerplexityAICredential",
                      "title": "PerplexityAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepInfraCredential",
                      "title": "DeepInfraCredential"
                    },
                    {
                      "$ref": "#/components/schemas/AzureOpenAICredential",
                      "title": "AzureOpenAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/CustomLLMCredential",
                      "title": "CustomLLMCredential"
                    },
                    {
                      "$ref": "#/components/schemas/ElevenLabsCredential",
                      "title": "ElevenLabsCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PlayHTCredential",
                      "title": "PlayHTCredential"
                    },
                    {
                      "$ref": "#/components/schemas/RimeAICredential",
                      "title": "RimeAICredential"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "provider",
                    "mapping": {
                      "twilio": "#/components/schemas/TwilioCredential",
                      "deepgram": "#/components/schemas/DeepgramCredential",
                      "openai": "#/components/schemas/OpenAICredential",
                      "azure-openai": "#/components/schemas/AzureOpenAICredential",
                      "together-ai": "#/components/schemas/TogetherAICredential",
                      "anyscale": "#/components/schemas/AnyscaleCredential",
                      "openrouter": "#/components/schemas/OpenRouterCredential",
                      "perplexity-ai": "#/components/schemas/PerplexityAICredential",
                      "deepinfra": "#/components/schemas/DeepInfraCredential",
                      "custom-llm": "#/components/schemas/CustomLLMCredential",
                      "11labs": "#/components/schemas/ElevenLabsCredential",
                      "playht": "#/components/schemas/PlayHTCredential",
                      "rimeai": "#/components/schemas/RimeAICredential"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Credentials"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "CredentialController_findAll",
        "summary": "List Credentials",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/TwilioCredential",
                        "title": "TwilioCredential"
                      },
                      {
                        "$ref": "#/components/schemas/DeepgramCredential",
                        "title": "DeepgramCredential"
                      },
                      {
                        "$ref": "#/components/schemas/OpenAICredential",
                        "title": "OpenAICredential"
                      },
                      {
                        "$ref": "#/components/schemas/TogetherAICredential",
                        "title": "TogetherAICredential"
                      },
                      {
                        "$ref": "#/components/schemas/AnyscaleCredential",
                        "title": "AnyscaleCredential"
                      },
                      {
                        "$ref": "#/components/schemas/OpenRouterCredential",
                        "title": "OpenRouterCredential"
                      },
                      {
                        "$ref": "#/components/schemas/PerplexityAICredential",
                        "title": "PerplexityAICredential"
                      },
                      {
                        "$ref": "#/components/schemas/DeepInfraCredential",
                        "title": "DeepInfraCredential"
                      },
                      {
                        "$ref": "#/components/schemas/AzureOpenAICredential",
                        "title": "AzureOpenAICredential"
                      },
                      {
                        "$ref": "#/components/schemas/CustomLLMCredential",
                        "title": "CustomLLMCredential"
                      },
                      {
                        "$ref": "#/components/schemas/ElevenLabsCredential",
                        "title": "ElevenLabsCredential"
                      },
                      {
                        "$ref": "#/components/schemas/PlayHTCredential",
                        "title": "PlayHTCredential"
                      },
                      {
                        "$ref": "#/components/schemas/RimeAICredential",
                        "title": "RimeAICredential"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "provider",
                      "mapping": {
                        "twilio": "#/components/schemas/TwilioCredential",
                        "deepgram": "#/components/schemas/DeepgramCredential",
                        "openai": "#/components/schemas/OpenAICredential",
                        "azure-openai": "#/components/schemas/AzureOpenAICredential",
                        "together-ai": "#/components/schemas/TogetherAICredential",
                        "anyscale": "#/components/schemas/AnyscaleCredential",
                        "openrouter": "#/components/schemas/OpenRouterCredential",
                        "perplexity-ai": "#/components/schemas/PerplexityAICredential",
                        "deepinfra": "#/components/schemas/DeepInfraCredential",
                        "custom-llm": "#/components/schemas/CustomLLMCredential",
                        "11labs": "#/components/schemas/ElevenLabsCredential",
                        "playht": "#/components/schemas/PlayHTCredential",
                        "rimeai": "#/components/schemas/RimeAICredential"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Credentials"],
        "security": [{ "bearer": [] }]
      }
    },
    "/credential/{id}": {
      "get": {
        "operationId": "CredentialController_findOne",
        "summary": "Get Credential",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TwilioCredential",
                      "title": "TwilioCredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepgramCredential",
                      "title": "DeepgramCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenAICredential",
                      "title": "OpenAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/TogetherAICredential",
                      "title": "TogetherAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/AnyscaleCredential",
                      "title": "AnyscaleCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenRouterCredential",
                      "title": "OpenRouterCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PerplexityAICredential",
                      "title": "PerplexityAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepInfraCredential",
                      "title": "DeepInfraCredential"
                    },
                    {
                      "$ref": "#/components/schemas/AzureOpenAICredential",
                      "title": "AzureOpenAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/CustomLLMCredential",
                      "title": "CustomLLMCredential"
                    },
                    {
                      "$ref": "#/components/schemas/ElevenLabsCredential",
                      "title": "ElevenLabsCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PlayHTCredential",
                      "title": "PlayHTCredential"
                    },
                    {
                      "$ref": "#/components/schemas/RimeAICredential",
                      "title": "RimeAICredential"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "provider",
                    "mapping": {
                      "twilio": "#/components/schemas/TwilioCredential",
                      "deepgram": "#/components/schemas/DeepgramCredential",
                      "openai": "#/components/schemas/OpenAICredential",
                      "azure-openai": "#/components/schemas/AzureOpenAICredential",
                      "together-ai": "#/components/schemas/TogetherAICredential",
                      "anyscale": "#/components/schemas/AnyscaleCredential",
                      "openrouter": "#/components/schemas/OpenRouterCredential",
                      "perplexity-ai": "#/components/schemas/PerplexityAICredential",
                      "deepinfra": "#/components/schemas/DeepInfraCredential",
                      "custom-llm": "#/components/schemas/CustomLLMCredential",
                      "11labs": "#/components/schemas/ElevenLabsCredential",
                      "playht": "#/components/schemas/PlayHTCredential",
                      "rimeai": "#/components/schemas/RimeAICredential"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Credentials"],
        "security": [{ "bearer": [] }]
      },
      "put": {
        "operationId": "CredentialController_update",
        "summary": "Update Credential",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTwilioCredentialDTO",
                    "title": "TwilioCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateDeepgramCredentialDTO",
                    "title": "DeepgramCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateOpenAICredentialDTO",
                    "title": "OpenAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateAzureOpenAICredentialDTO",
                    "title": "AzureOpenAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateTogetherAICredentialDTO",
                    "title": "TogetherAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateAnyscaleCredentialDTO",
                    "title": "AnyscaleCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateOpenRouterCredentialDTO",
                    "title": "OpenRouterCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdatePerplexityAICredentialDTO",
                    "title": "PerplexityAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateDeepInfraCredentialDTO",
                    "title": "DeepInfraCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateCustomLLMCredentialDTO",
                    "title": "CustomLLMCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateElevenLabsCredentialDTO",
                    "title": "ElevenLabsCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdatePlayHTCredentialDTO",
                    "title": "PlayHTCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateRimeAICredentialDTO",
                    "title": "RimeAICredential"
                  }
                ],
                "discriminator": {
                  "propertyName": "provider",
                  "mapping": {
                    "twilio": "#/components/schemas/UpdateTwilioCredentialDTO",
                    "deepgram": "#/components/schemas/UpdateDeepgramCredentialDTO",
                    "openai": "#/components/schemas/UpdateOpenAICredentialDTO",
                    "together-ai": "#/components/schemas/UpdateTogetherAICredentialDTO",
                    "anyscale": "#/components/schemas/UpdateAnyscaleCredentialDTO",
                    "openrouter": "#/components/schemas/UpdateOpenRouterCredentialDTO",
                    "perplexity-ai": "#/components/schemas/UpdatePerplexityAICredentialDTO",
                    "deepinfra": "#/components/schemas/UpdateDeepInfraCredentialDTO",
                    "azure-openai": "#/components/schemas/UpdateAzureOpenAICredentialDTO",
                    "custom-llm": "#/components/schemas/UpdateCustomLLMCredentialDTO",
                    "11labs": "#/components/schemas/UpdateElevenLabsCredentialDTO",
                    "playht": "#/components/schemas/UpdatePlayHTCredentialDTO",
                    "rimeai": "#/components/schemas/UpdateRimeAICredentialDTO"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TwilioCredential",
                      "title": "TwilioCredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepgramCredential",
                      "title": "DeepgramCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenAICredential",
                      "title": "OpenAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/TogetherAICredential",
                      "title": "TogetherAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/AnyscaleCredential",
                      "title": "AnyscaleCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenRouterCredential",
                      "title": "OpenRouterCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PerplexityAICredential",
                      "title": "PerplexityAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepInfraCredential",
                      "title": "DeepInfraCredential"
                    },
                    {
                      "$ref": "#/components/schemas/AzureOpenAICredential",
                      "title": "AzureOpenAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/CustomLLMCredential",
                      "title": "CustomLLMCredential"
                    },
                    {
                      "$ref": "#/components/schemas/ElevenLabsCredential",
                      "title": "ElevenLabsCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PlayHTCredential",
                      "title": "PlayHTCredential"
                    },
                    {
                      "$ref": "#/components/schemas/RimeAICredential",
                      "title": "RimeAICredential"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "provider",
                    "mapping": {
                      "twilio": "#/components/schemas/TwilioCredential",
                      "deepgram": "#/components/schemas/DeepgramCredential",
                      "openai": "#/components/schemas/OpenAICredential",
                      "azure-openai": "#/components/schemas/AzureOpenAICredential",
                      "together-ai": "#/components/schemas/TogetherAICredential",
                      "anyscale": "#/components/schemas/AnyscaleCredential",
                      "openrouter": "#/components/schemas/OpenRouterCredential",
                      "perplexity-ai": "#/components/schemas/PerplexityAICredential",
                      "deepinfra": "#/components/schemas/DeepInfraCredential",
                      "custom-llm": "#/components/schemas/CustomLLMCredential",
                      "11labs": "#/components/schemas/ElevenLabsCredential",
                      "playht": "#/components/schemas/PlayHTCredential",
                      "rimeai": "#/components/schemas/RimeAICredential"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Credentials"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "CredentialController_remove",
        "summary": "Delete Credential",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TwilioCredential",
                      "title": "TwilioCredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepgramCredential",
                      "title": "DeepgramCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenAICredential",
                      "title": "OpenAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/TogetherAICredential",
                      "title": "TogetherAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/AnyscaleCredential",
                      "title": "AnyscaleCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenRouterCredential",
                      "title": "OpenRouterCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PerplexityAICredential",
                      "title": "PerplexityAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepInfraCredential",
                      "title": "DeepInfraCredential"
                    },
                    {
                      "$ref": "#/components/schemas/AzureOpenAICredential",
                      "title": "AzureOpenAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/CustomLLMCredential",
                      "title": "CustomLLMCredential"
                    },
                    {
                      "$ref": "#/components/schemas/ElevenLabsCredential",
                      "title": "ElevenLabsCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PlayHTCredential",
                      "title": "PlayHTCredential"
                    },
                    {
                      "$ref": "#/components/schemas/RimeAICredential",
                      "title": "RimeAICredential"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "provider",
                    "mapping": {
                      "twilio": "#/components/schemas/TwilioCredential",
                      "deepgram": "#/components/schemas/DeepgramCredential",
                      "openai": "#/components/schemas/OpenAICredential",
                      "azure-openai": "#/components/schemas/AzureOpenAICredential",
                      "together-ai": "#/components/schemas/TogetherAICredential",
                      "anyscale": "#/components/schemas/AnyscaleCredential",
                      "openrouter": "#/components/schemas/OpenRouterCredential",
                      "perplexity-ai": "#/components/schemas/PerplexityAICredential",
                      "deepinfra": "#/components/schemas/DeepInfraCredential",
                      "custom-llm": "#/components/schemas/CustomLLMCredential",
                      "11labs": "#/components/schemas/ElevenLabsCredential",
                      "playht": "#/components/schemas/PlayHTCredential",
                      "rimeai": "#/components/schemas/RimeAICredential"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Credentials"],
        "security": [{ "bearer": [] }]
      }
    },
    "/phone-number/buy": {
      "post": {
        "operationId": "PhoneNumberController_buy",
        "summary": "Buy Phone Number",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BuyPhoneNumberDTO" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PhoneNumber" }
              }
            }
          }
        },
        "tags": ["Phone Numbers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/phone-number/import": {
      "post": {
        "operationId": "PhoneNumberController_import",
        "summary": "Import Twilio Number",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportTwilioPhoneNumberDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PhoneNumber" }
              }
            }
          }
        },
        "tags": ["Phone Numbers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/phone-number": {
      "get": {
        "operationId": "PhoneNumberController_findAll",
        "summary": "List Phone Numbers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PhoneNumber" }
                }
              }
            }
          }
        },
        "tags": ["Phone Numbers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/phone-number/{id}": {
      "get": {
        "operationId": "PhoneNumberController_findOne",
        "summary": "Get Phone Number",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PhoneNumber" }
              }
            }
          }
        },
        "tags": ["Phone Numbers"],
        "security": [{ "bearer": [] }]
      },
      "patch": {
        "operationId": "PhoneNumberController_update",
        "summary": "Update Phone Number",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdatePhoneNumberDTO" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PhoneNumber" }
              }
            }
          }
        },
        "tags": ["Phone Numbers"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "PhoneNumberController_remove",
        "summary": "Delete Phone Number",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PhoneNumber" }
              }
            }
          }
        },
        "tags": ["Phone Numbers"],
        "security": [{ "bearer": [] }]
      }
    }
  },
  "info": {
    "title": "Vapi API",
    "description": "API for building voice assistants",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [{ "url": "https://hugely-stirred-krill.ngrok-free.app" }],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "Bearer",
        "type": "http",
        "description": "Retrieve your key from [Dashboard](dashboard.vapi.ai)."
      }
    },
    "schemas": {
      "DeepgramVoice": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the voice provider that will be used.\n\nPro Voices: `11labs`, `playht`, `openai`\n\nBasic Voices: `rimeai`, `deepgram`",
            "enum": ["deepgram"]
          },
          "voiceId": {
            "description": "This is the provider-specific ID that will be used.",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "aurora",
                  "asteria",
                  "artemis",
                  "andromeda",
                  "stella",
                  "orion",
                  "atlas"
                ],
                "title": "Preset Voice Options"
              },
              { "type": "string", "title": "Deepgram Voice ID" }
            ]
          }
        },
        "required": ["provider", "voiceId"]
      },
      "OpenAIFunction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "This is the the name of the function to be called.\n\nMust be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.",
            "maxLength": 64
          },
          "async": {
            "type": "boolean",
            "description": "Setting async: true will cause the function to be called asynchronously, meaning that the Assistant will not wait for the function to return before continuing."
          },
          "description": {
            "type": "string",
            "description": "This is the description of what the function does, used by the AI to choose when and how to call the function."
          },
          "parameters": {
            "type": "object",
            "description": "These are the parameters the functions accepts, described as a JSON Schema object.\n\nSee the [OpenAI guide](https://platform.openai.com/docs/guides/gpt/function-calling) for examples, and the [JSON Schema reference](https://json-schema.org/understanding-json-schema) for documentation about the format.\n\nTo describe a function that accepts no parameters, provide the value {\"type\": \"object\", \"properties\": {}}."
          }
        },
        "required": ["name", "parameters"]
      },
      "CustomLLMModel": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the provider that will be used for the model. Any service, including your own server, that is compatible with the OpenAI API can be used.",
            "enum": ["custom-llm"]
          },
          "url": {
            "type": "string",
            "description": "These is the URL we'll use for the OpenAI client's `baseURL`. Ex. https://openrouter.ai/api/v1"
          },
          "model": {
            "type": "string",
            "description": "The key of the model from the custom provider. Ex. cognitivecomputations/dolphin-mixtral-8x7b"
          },
          "systemPrompt": {
            "type": "string",
            "description": "This sets the objective and understanding for the assistant."
          },
          "temperature": {
            "type": "number",
            "description": "This is the temperature that will be used for calls. Default is 1.",
            "minimum": 0,
            "maximum": 2
          },
          "functions": {
            "description": "These are the functions that the assistant can execute during the call.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/OpenAIFunction" }
          }
        },
        "required": ["provider", "url", "model"]
      },
      "DeepgramTranscriber": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the transcription provider that will be used. Currently, only Deepgram is supported.",
            "enum": ["deepgram"]
          },
          "model": {
            "description": "This is the Deepgram model that will be used. A list of models can be found here: https://developers.deepgram.com/docs/models-languages-overview",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "nova-2",
                  "nova-2-general",
                  "nova-2-meeting",
                  "nova-2-phonecall",
                  "nova-2-finance",
                  "nova-2-conversationalai",
                  "nova-2-voicemail",
                  "nova-2-video",
                  "nova-2-medical",
                  "nova-2-drivethru",
                  "nova-2-automotive",
                  "nova-2-custom"
                ]
              },
              { "type": "string" }
            ]
          },
          "keywords": {
            "description": "These keywords are passed to the transcription model to help it pick up use-case specific words. Anything that may not be a common word, like your company name, should be added here.",
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": ["provider"]
      },
      "ElevenLabsVoice": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the voice provider that will be used.\n\nPro Voices: `11labs`, `playht`\n\nBasic Voices: `rimeai`, `deepgram`",
            "enum": ["11labs"]
          },
          "voiceId": {
            "description": "This is the provider-specific ID that will be used. Ensure the Voice is present in your 11Labs Voice Library.",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "burt",
                  "andrea",
                  "phillip",
                  "steve",
                  "joseph",
                  "myra",
                  "paula",
                  "ryan",
                  "drew",
                  "paul",
                  "mrb",
                  "matilda",
                  "mark"
                ],
                "title": "Preset Voice Options"
              },
              { "type": "string", "title": "11Labs Voice ID" }
            ]
          },
          "stability": {
            "type": "number",
            "description": "Defines the stability for voice settings.",
            "default": null
          },
          "similarityBoost": {
            "type": "number",
            "description": "Defines the similarity boost for voice settings.",
            "default": null
          },
          "style": {
            "type": "boolean",
            "description": "Defines the style for voice settings.",
            "default": null
          },
          "useSpeakerBoost": {
            "type": "boolean",
            "description": "Defines the use speaker boost for voice settings.",
            "default": null
          }
        },
        "required": ["provider", "voiceId"]
      },
      "OpenAIModel": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the provider that will be used for the model. Currently, only OpenAI and Custom LLM URLs are supported.\n\nIf you have your own LLM, you can use the URL of your LLM endpoint here.",
            "enum": ["openai"]
          },
          "model": {
            "type": "string",
            "description": "This is the OpenAI model that will be used.",
            "enum": ["gpt-4", "gpt-3.5-turbo"]
          },
          "systemPrompt": {
            "type": "string",
            "description": "This sets the objective and understanding for the assistant."
          },
          "temperature": {
            "type": "number",
            "description": "This is the temperature that will be used for calls. Default is 1.",
            "minimum": 0,
            "maximum": 2
          },
          "functions": {
            "description": "These are the functions that the assistant can execute during the call.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/OpenAIFunction" }
          }
        },
        "required": ["provider", "model"]
      },
      "PlayHTVoice": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the voice provider that will be used.\n\nPro Voices: `11labs`, `playht`, `openai`\n\nBasic Voices: `rimeai`, `deepgram`",
            "enum": ["playht"]
          },
          "voiceId": {
            "description": "This is the provider-specific ID that will be used.",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "jennifer",
                  "melissa",
                  "will",
                  "chris",
                  "matt",
                  "jack",
                  "ruby",
                  "davis",
                  "donna",
                  "michael"
                ],
                "title": "Preset Voice Options"
              },
              { "type": "string", "title": "PlayHT Voice ID" }
            ]
          },
          "speed": {
            "type": "number",
            "description": "This is the speed multiplier that will be used.",
            "minimum": 0,
            "maximum": 5,
            "default": null
          },
          "temperature": {
            "type": "number",
            "description": "A floating point number between 0, inclusive, and 2, inclusive. If equal to null or not provided, the model's default temperature will be used. The temperature parameter controls variance. Lower temperatures result in more predictable results, higher temperatures allow each run to vary more, so the voice may sound less like the baseline voice.",
            "minimum": 0.1,
            "maximum": 2,
            "default": null
          },
          "emotion": {
            "type": "string",
            "description": "An emotion to be applied to the speech.",
            "enum": [
              "female_happy",
              "female_sad",
              "female_angry",
              "female_fearful",
              "female_disgust",
              "female_surprised"
            ],
            "default": null
          },
          "voiceGuidance": {
            "type": "number",
            "description": "A number between 1 and 6. Use lower numbers to reduce how unique your chosen voice will be compared to other voices.",
            "minimum": 1,
            "maximum": 6,
            "default": null
          },
          "styleGuidance": {
            "type": "number",
            "description": "A number between 1 and 30. Use lower numbers to to reduce how strong your chosen emotion will be. Higher numbers will create a very emotional performance.",
            "minimum": 1,
            "maximum": 30,
            "default": null
          },
          "textGuidance": {
            "type": "number",
            "description": "A number between 1 and 2. This number influences how closely the generated speech adheres to the input text. Use lower values to create more fluid speech, but with a higher chance of deviating from the input text. Higher numbers will make the generated speech more accurate to the input text, ensuring that the words spoken align closely with the provided text.",
            "minimum": 1,
            "maximum": 2,
            "default": null
          }
        },
        "required": ["provider", "voiceId"]
      },
      "RimeAIVoice": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the voice provider that will be used.\n\nPro Voices: `11labs`, `playht`, `openai`\n\nBasic Voices: `rimeai`, `deepgram`",
            "enum": ["rimeai"]
          },
          "voiceId": {
            "description": "This is the provider-specific ID that will be used.",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "kai",
                  "zion",
                  "xavier",
                  "marty",
                  "hudson",
                  "savannah",
                  "colette",
                  "daphne",
                  "aurora",
                  "nova"
                ],
                "title": "Preset Voice Options"
              },
              { "type": "string", "title": "RimeAI Voice ID" }
            ]
          },
          "speed": {
            "type": "number",
            "description": "This is the speed multiplier that will be used.",
            "minimum": 0,
            "default": null
          }
        },
        "required": ["provider", "voiceId"]
      },
      "OpenAIVoice": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the voice provider that will be used.\n\nPro Voices: `11labs`, `playht`, `openai`\n\nBasic Voices: `rimeai`, `deepgram`",
            "enum": ["openai"]
          },
          "voiceId": {
            "description": "This is the provider-specific ID that will be used.",
            "oneOf": [
              {
                "type": "string",
                "enum": ["alloy", "echo", "fable", "onyx", "nova", "shimmer"],
                "title": "Preset Voice Options"
              },
              { "type": "string", "title": "OpenAI Voice ID" }
            ]
          },
          "speed": {
            "type": "number",
            "description": "This is the speed multiplier that will be used.",
            "minimum": 0.25,
            "maximum": 4,
            "default": null
          }
        },
        "required": ["provider", "voiceId"]
      },
      "CreateAssistantDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "This is the name of the assistant. This is just for your own reference.",
            "maxLength": 100,
            "default": null
          },
          "transcriber": {
            "description": "These are the options for the assistant's transcriber.",
            "default": null,
            "allOf": [{ "$ref": "#/components/schemas/DeepgramTranscriber" }]
          },
          "model": {
            "description": "These are the options for the assistant's LLM.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpenAIModel",
                "title": "OpenAIModel"
              },
              {
                "$ref": "#/components/schemas/TogetherAIModel",
                "title": "TogetherAIModel"
              },
              {
                "$ref": "#/components/schemas/AnyscaleModel",
                "title": "AnyscaleModel"
              },
              {
                "$ref": "#/components/schemas/OpenRouterModel",
                "title": "OpenRouterModel"
              },
              {
                "$ref": "#/components/schemas/PerplexityAIModel",
                "title": "PerplexityAIModel"
              },
              {
                "$ref": "#/components/schemas/DeepInfraModel",
                "title": "DeepInfraModel"
              },
              {
                "$ref": "#/components/schemas/CustomLLMModel",
                "title": "CustomLLMModel"
              }
            ]
          },
          "voice": {
            "description": "These are the options for the assistant's voice.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ElevenLabsVoice",
                "title": "ElevenLabsVoice"
              },
              {
                "$ref": "#/components/schemas/PlayHTVoice",
                "title": "PlayHTVoice"
              },
              {
                "$ref": "#/components/schemas/RimeAIVoice",
                "title": "RimeAIVoice"
              },
              {
                "$ref": "#/components/schemas/DeepgramVoice",
                "title": "DeepgramVoice"
              },
              {
                "$ref": "#/components/schemas/OpenAIVoice",
                "title": "OpenAIVoice"
              }
            ],
            "default": { "provider": "playht", "voiceId": "jennifer" }
          },
          "language": {
            "type": "string",
            "description": "This sets the spoken language of the user. The assistant will do its best to respond in the same language.\nWhen using a language other than `en-*`, only `11labs` voices will pronounce the words correctly. There will also be ~1sec of additional latency.",
            "enum": [
              "en",
              "en-US",
              "en-AU",
              "en-GB",
              "en-NZ",
              "en-IN",
              "fr",
              "fr-CA",
              "de",
              "hi",
              "hi-Latn",
              "pt",
              "pt-BR",
              "es",
              "es-419"
            ],
            "default": null
          },
          "forwardingPhoneNumber": {
            "type": "string",
            "description": "This is the number to forward to if assistant runs into issues.",
            "default": null,
            "example": null
          },
          "firstMessage": {
            "type": "string",
            "description": "This is the first message that the assistant will say.\n\nIf unspecified, it will wait for the user to speak.",
            "maxLength": 1000,
            "default": "Hey there!"
          },
          "voicemailMessage": {
            "type": "string",
            "description": "This is the message that the assistant will say if the call is forwarded to voicemail.\n\nIf unspecified, it will hang up.",
            "maxLength": 1000,
            "default": null
          },
          "endCallMessage": {
            "type": "string",
            "description": "This is the message that the assistant will say if it ends the call.\n\nIf unspecified, it will hang up without saying anything.",
            "maxLength": 400,
            "default": null
          },
          "interruptionsEnabled": {
            "type": "boolean",
            "description": "This sets whether the user can interrupt the assistant while it's speaking. Defaults to true.",
            "default": null
          },
          "recordingEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant's calls are recorded. Defaults to true.",
            "default": null
          },
          "endCallFunctionEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant will be able to hang up the call. Defaults to false.",
            "default": null
          },
          "fillersEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant will use fillers like Well..., Okay cool..., etc. This will modify your prompt slightly, which could result in differing completions. Defaults to false.",
            "default": null
          },
          "liveTranscriptsEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant will send live transcriptions to the Server URL and/or Vapi clients.",
            "default": null
          },
          "silenceTimeoutSeconds": {
            "type": "number",
            "description": "How many seconds of silence to wait before ending the call. Defaults to 30.",
            "minimum": 10,
            "maximum": 600,
            "default": null
          }
        }
      },
      "Assistant": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "This is the name of the assistant. This is just for your own reference.",
            "maxLength": 100,
            "default": null
          },
          "transcriber": {
            "description": "These are the options for the assistant's transcriber.",
            "default": null,
            "allOf": [{ "$ref": "#/components/schemas/DeepgramTranscriber" }]
          },
          "model": {
            "description": "These are the options for the assistant's LLM.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpenAIModel",
                "title": "OpenAIModel"
              },
              {
                "$ref": "#/components/schemas/TogetherAIModel",
                "title": "TogetherAIModel"
              },
              {
                "$ref": "#/components/schemas/AnyscaleModel",
                "title": "AnyscaleModel"
              },
              {
                "$ref": "#/components/schemas/OpenRouterModel",
                "title": "OpenRouterModel"
              },
              {
                "$ref": "#/components/schemas/PerplexityAIModel",
                "title": "PerplexityAIModel"
              },
              {
                "$ref": "#/components/schemas/DeepInfraModel",
                "title": "DeepInfraModel"
              },
              {
                "$ref": "#/components/schemas/CustomLLMModel",
                "title": "CustomLLMModel"
              }
            ]
          },
          "voice": {
            "description": "These are the options for the assistant's voice.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ElevenLabsVoice",
                "title": "ElevenLabsVoice"
              },
              {
                "$ref": "#/components/schemas/PlayHTVoice",
                "title": "PlayHTVoice"
              },
              {
                "$ref": "#/components/schemas/RimeAIVoice",
                "title": "RimeAIVoice"
              },
              {
                "$ref": "#/components/schemas/DeepgramVoice",
                "title": "DeepgramVoice"
              },
              {
                "$ref": "#/components/schemas/OpenAIVoice",
                "title": "OpenAIVoice"
              }
            ],
            "default": { "provider": "playht", "voiceId": "jennifer" }
          },
          "language": {
            "type": "string",
            "description": "This sets the spoken language of the user. The assistant will do its best to respond in the same language.\nWhen using a language other than `en-*`, only `11labs` voices will pronounce the words correctly. There will also be ~1sec of additional latency.",
            "enum": [
              "en",
              "en-US",
              "en-AU",
              "en-GB",
              "en-NZ",
              "en-IN",
              "fr",
              "fr-CA",
              "de",
              "hi",
              "hi-Latn",
              "pt",
              "pt-BR",
              "es",
              "es-419"
            ],
            "default": null
          },
          "forwardingPhoneNumber": {
            "type": "string",
            "description": "This is the number to forward to if assistant runs into issues.",
            "default": null,
            "example": null
          },
          "firstMessage": {
            "type": "string",
            "description": "This is the first message that the assistant will say.\n\nIf unspecified, it will wait for the user to speak.",
            "maxLength": 1000,
            "default": "Hey there!"
          },
          "voicemailMessage": {
            "type": "string",
            "description": "This is the message that the assistant will say if the call is forwarded to voicemail.\n\nIf unspecified, it will hang up.",
            "maxLength": 1000,
            "default": null
          },
          "endCallMessage": {
            "type": "string",
            "description": "This is the message that the assistant will say if it ends the call.\n\nIf unspecified, it will hang up without saying anything.",
            "maxLength": 400,
            "default": null
          },
          "interruptionsEnabled": {
            "type": "boolean",
            "description": "This sets whether the user can interrupt the assistant while it's speaking. Defaults to true.",
            "default": null
          },
          "recordingEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant's calls are recorded. Defaults to true.",
            "default": null
          },
          "endCallFunctionEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant will be able to hang up the call. Defaults to false.",
            "default": null
          },
          "fillersEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant will use fillers like Well..., Okay cool..., etc. This will modify your prompt slightly, which could result in differing completions. Defaults to false.",
            "default": null
          },
          "liveTranscriptsEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant will send live transcriptions to the Server URL and/or Vapi clients.",
            "default": null
          },
          "silenceTimeoutSeconds": {
            "type": "number",
            "description": "How many seconds of silence to wait before ending the call. Defaults to 30.",
            "minimum": 10,
            "maximum": 600,
            "default": null
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the assistant."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this assistant belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": ["id", "orgId", "createdAt", "updatedAt"]
      },
      "UpdateAssistantDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "This is the name of the assistant. This is just for your own reference.",
            "maxLength": 100,
            "default": null
          },
          "transcriber": {
            "description": "These are the options for the assistant's transcriber.",
            "default": null,
            "allOf": [{ "$ref": "#/components/schemas/DeepgramTranscriber" }]
          },
          "model": {
            "description": "These are the options for the assistant's LLM.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpenAIModel",
                "title": "OpenAIModel"
              },
              {
                "$ref": "#/components/schemas/TogetherAIModel",
                "title": "TogetherAIModel"
              },
              {
                "$ref": "#/components/schemas/AnyscaleModel",
                "title": "AnyscaleModel"
              },
              {
                "$ref": "#/components/schemas/OpenRouterModel",
                "title": "OpenRouterModel"
              },
              {
                "$ref": "#/components/schemas/PerplexityAIModel",
                "title": "PerplexityAIModel"
              },
              {
                "$ref": "#/components/schemas/DeepInfraModel",
                "title": "DeepInfraModel"
              },
              {
                "$ref": "#/components/schemas/CustomLLMModel",
                "title": "CustomLLMModel"
              }
            ]
          },
          "voice": {
            "description": "These are the options for the assistant's voice.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ElevenLabsVoice",
                "title": "ElevenLabsVoice"
              },
              {
                "$ref": "#/components/schemas/PlayHTVoice",
                "title": "PlayHTVoice"
              },
              {
                "$ref": "#/components/schemas/RimeAIVoice",
                "title": "RimeAIVoice"
              },
              {
                "$ref": "#/components/schemas/DeepgramVoice",
                "title": "DeepgramVoice"
              },
              {
                "$ref": "#/components/schemas/OpenAIVoice",
                "title": "OpenAIVoice"
              }
            ],
            "default": { "provider": "playht", "voiceId": "jennifer" }
          },
          "language": {
            "type": "string",
            "description": "This sets the spoken language of the user. The assistant will do its best to respond in the same language.\nWhen using a language other than `en-*`, only `11labs` voices will pronounce the words correctly. There will also be ~1sec of additional latency.",
            "enum": [
              "en",
              "en-US",
              "en-AU",
              "en-GB",
              "en-NZ",
              "en-IN",
              "fr",
              "fr-CA",
              "de",
              "hi",
              "hi-Latn",
              "pt",
              "pt-BR",
              "es",
              "es-419"
            ],
            "default": null
          },
          "forwardingPhoneNumber": {
            "type": "string",
            "description": "This is the number to forward to if assistant runs into issues.",
            "default": null,
            "example": null
          },
          "firstMessage": {
            "type": "string",
            "description": "This is the first message that the assistant will say.\n\nIf unspecified, it will wait for the user to speak.",
            "maxLength": 1000,
            "default": "Hey there!"
          },
          "voicemailMessage": {
            "type": "string",
            "description": "This is the message that the assistant will say if the call is forwarded to voicemail.\n\nIf unspecified, it will hang up.",
            "maxLength": 1000,
            "default": null
          },
          "endCallMessage": {
            "type": "string",
            "description": "This is the message that the assistant will say if it ends the call.\n\nIf unspecified, it will hang up without saying anything.",
            "maxLength": 400,
            "default": null
          },
          "interruptionsEnabled": {
            "type": "boolean",
            "description": "This sets whether the user can interrupt the assistant while it's speaking. Defaults to true.",
            "default": null
          },
          "recordingEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant's calls are recorded. Defaults to true.",
            "default": null
          },
          "endCallFunctionEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant will be able to hang up the call. Defaults to false.",
            "default": null
          },
          "fillersEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant will use fillers like Well..., Okay cool..., etc. This will modify your prompt slightly, which could result in differing completions. Defaults to false.",
            "default": null
          },
          "liveTranscriptsEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant will send live transcriptions to the Server URL and/or Vapi clients.",
            "default": null
          },
          "silenceTimeoutSeconds": {
            "type": "number",
            "description": "How many seconds of silence to wait before ending the call. Defaults to 30.",
            "minimum": 10,
            "maximum": 600,
            "default": null
          }
        }
      },
      "CreateCustomerDTO": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "This is the number of the customer."
          },
          "name": {
            "type": "string",
            "description": "This is the name of the customer. This is just for your own reference.",
            "maxLength": 40
          }
        }
      },
      "ImportTwilioPhoneNumberDTO": {
        "type": "object",
        "properties": {
          "twilioPhoneNumber": {
            "type": "string",
            "description": "These are the digits of the phone number you own on your Twilio."
          },
          "twilioAccountSid": {
            "type": "string",
            "description": "This is your Twilio Account SID that will be used to handle this phone number."
          },
          "twilioAuthToken": {
            "type": "string",
            "description": "This is the Twilio Auth Token that will be used to handle this phone number."
          },
          "name": {
            "type": "string",
            "description": "This is the name of the phone number. This is just for your own reference.",
            "maxLength": 40
          },
          "assistantId": {
            "type": "string",
            "description": "This is the assistant that will be used for incoming calls to this phone number.\n\nIf this is not set, then the phone number will not handle incoming calls."
          }
        },
        "required": ["twilioPhoneNumber", "twilioAccountSid", "twilioAuthToken"]
      },
      "Call": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "This is the type of call.",
            "enum": ["inboundPhoneCall", "outboundPhoneCall", "webCall"]
          },
          "status": {
            "type": "string",
            "description": "This is the status of the call.",
            "enum": ["queued", "ringing", "in-progress", "forwarding", "ended"]
          },
          "endedReason": {
            "type": "string",
            "description": "This is the explanation for how the call ended.",
            "enum": [
              "assistant-ended-call",
              "assistant-error",
              "assistant-forwarded-call",
              "assistant-join-timed-out",
              "assistant-not-found",
              "customer-busy",
              "customer-ended-call",
              "customer-did-not-answer",
              "db-error",
              "exceeded-max-duration",
              "manually-canceled",
              "no-server-available",
              "pipeline-error-custom-llm-response-was-invalid",
              "pipeline-error-custom-llm-request-failed",
              "pipeline-error-extra-function-failed",
              "pipeline-error-first-message-failed",
              "pipeline-error-function-filler-failed",
              "pipeline-error-function-failed",
              "pipeline-error-openai-llm-failed",
              "pipeline-error-openai-voice-failed",
              "pipeline-error-deepgram-transcriber-failed",
              "pipeline-error-deepgram-voice-failed",
              "pipeline-error-eleven-labs-voice-failed",
              "pipeline-error-playht-voice-failed",
              "pipeline-error-rimeai-voice-failed",
              "server-shutdown",
              "silence-timed-out",
              "twilio-failed-to-connect-call",
              "twilio-closed-websocket",
              "unknown-error",
              "voicemail"
            ]
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the call."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this call belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the call was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the call was last updated."
          },
          "startedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the call was started."
          },
          "endedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the call was ended."
          },
          "cost": {
            "type": "number",
            "description": "This is the cost of the call in USD."
          },
          "transcript": {
            "type": "string",
            "description": "This is the transcript of the call."
          },
          "recordingUrl": {
            "type": "string",
            "description": "This is the URL of the recording of the call."
          },
          "summary": {
            "type": "string",
            "description": "This is the summary of the call."
          },
          "messages": {
            "description": "These are the messages that were spoken during the call.",
            "type": "array",
            "items": { "type": "object" }
          },
          "twilioCallSid": {
            "type": "string",
            "description": "This is the callSid of the phone call.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type."
          },
          "webCallUrl": {
            "type": "string",
            "description": "This is the URL of the call that the assistant will join.\n\nOnly relevant for `webCall` type."
          },
          "assistantId": {
            "type": "string",
            "description": "This is the assistant that will be used for the call. To use a transient assistant, use `assistant` instead."
          },
          "assistant": {
            "description": "This is the assistant that will be used for the call. To use an existing assistant, use `assistantId` instead.",
            "allOf": [{ "$ref": "#/components/schemas/CreateAssistantDTO" }]
          },
          "customerId": {
            "type": "string",
            "description": "This is the customer that will be called. To call a transient customer , use `customer` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type."
          },
          "customer": {
            "description": "This is the customer that will be called. To call an existing customer, use `customerId` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type.",
            "allOf": [{ "$ref": "#/components/schemas/CreateCustomerDTO" }]
          },
          "phoneNumberId": {
            "type": "string",
            "description": "This is the phone number that will be used for the call. To use a transient number, use `phoneNumber` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type."
          },
          "phoneNumber": {
            "description": "This is the phone number that will be used for the call. To use an existing number, use `phoneNumberId` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type.",
            "allOf": [
              { "$ref": "#/components/schemas/ImportTwilioPhoneNumberDTO" }
            ]
          }
        },
        "required": ["id", "orgId", "createdAt", "updatedAt"]
      },
      "CreateOutboundCallDTO": {
        "type": "object",
        "properties": {
          "assistantId": {
            "type": "string",
            "description": "This is the assistant that will be used for the call. To use a transient assistant, use `assistant` instead."
          },
          "assistant": {
            "description": "This is the assistant that will be used for the call. To use an existing assistant, use `assistantId` instead.",
            "allOf": [{ "$ref": "#/components/schemas/CreateAssistantDTO" }]
          },
          "customerId": {
            "type": "string",
            "description": "This is the customer that will be called. To call a transient customer , use `customer` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type."
          },
          "customer": {
            "description": "This is the customer that will be called. To call an existing customer, use `customerId` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type.",
            "allOf": [{ "$ref": "#/components/schemas/CreateCustomerDTO" }]
          },
          "phoneNumberId": {
            "type": "string",
            "description": "This is the phone number that will be used for the call. To use a transient number, use `phoneNumber` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type."
          },
          "phoneNumber": {
            "description": "This is the phone number that will be used for the call. To use an existing number, use `phoneNumberId` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type.",
            "allOf": [
              { "$ref": "#/components/schemas/ImportTwilioPhoneNumberDTO" }
            ]
          }
        }
      },
      "CreateWebCallDTO": {
        "type": "object",
        "properties": {
          "assistantId": {
            "type": "string",
            "description": "This is the assistant that will be used for the call. To use a transient assistant, use `assistant` instead."
          },
          "assistant": {
            "description": "This is the assistant that will be used for the call. To use an existing assistant, use `assistantId` instead.",
            "allOf": [{ "$ref": "#/components/schemas/CreateAssistantDTO" }]
          }
        }
      },
      "TwilioCredential": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["twilio"] },
          "authToken": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          },
          "accountSid": { "type": "string" }
        },
        "required": [
          "provider",
          "authToken",
          "id",
          "orgId",
          "createdAt",
          "updatedAt",
          "accountSid"
        ]
      },
      "DeepgramCredential": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["deepgram"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "AzureOpenAICredential": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["azure-openai"] },
          "openAIKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          },
          "openAIEndpoint": { "type": "string" }
        },
        "required": [
          "provider",
          "openAIKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt",
          "openAIEndpoint"
        ]
      },
      "ElevenLabsCredential": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["11labs"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "PlayHTCredential": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["playht"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          },
          "userId": { "type": "string" }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt",
          "userId"
        ]
      },
      "RimeAICredential": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["rimeai"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "OpenAICredential": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["openai"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "TogetherAICredential": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["together-ai"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "AnyscaleCredential": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["anyscale"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "OpenRouterCredential": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["openrouter"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "PerplexityAICredential": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["perplexity-ai"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "DeepInfraCredential": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["deepinfra"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "CustomLLMCredential": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["custom-llm"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateTwilioCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["twilio"] },
          "authToken": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "accountSid": { "type": "string" }
        },
        "required": ["provider", "authToken", "accountSid"]
      },
      "CreateDeepgramCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["deepgram"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "CreateAzureOpenAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["azure-openai"] },
          "openAIKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "openAIEndpoint": { "type": "string" }
        },
        "required": ["provider", "openAIKey", "openAIEndpoint"]
      },
      "CreateOpenAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["openai"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "CreateTogetherAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["together-ai"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "CreateAnyscaleCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["anyscale"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "CreateOpenRouterCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["openrouter"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "CreatePerplexityAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["perplexity-ai"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "CreateDeepInfraCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["deepinfra"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "CreateCustomLLMCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["custom-llm"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "CreateElevenLabsCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["11labs"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "CreatePlayHTCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["playht"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "userId": { "type": "string" }
        },
        "required": ["provider", "apiKey", "userId"]
      },
      "CreateRimeAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["rimeai"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "UpdateTwilioCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["twilio"] },
          "authToken": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "accountSid": { "type": "string" }
        },
        "required": ["provider", "authToken", "accountSid"]
      },
      "UpdateDeepgramCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["deepgram"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "UpdateAzureOpenAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["azure-openai"] },
          "openAIKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "openAIEndpoint": { "type": "string" }
        },
        "required": ["provider", "openAIKey", "openAIEndpoint"]
      },
      "UpdateOpenAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["openai"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "UpdateTogetherAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["together-ai"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "UpdateAnyscaleCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["anyscale"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "UpdateOpenRouterCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["openrouter"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "UpdatePerplexityAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["perplexity-ai"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "UpdateDeepInfraCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["deepinfra"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "UpdateCustomLLMCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["custom-llm"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "UpdateElevenLabsCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["11labs"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "UpdatePlayHTCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["playht"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "userId": { "type": "string" }
        },
        "required": ["provider", "apiKey", "userId"]
      },
      "UpdateRimeAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": { "type": "string", "enum": ["rimeai"] },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": ["provider", "apiKey"]
      },
      "BuyPhoneNumberDTO": {
        "type": "object",
        "properties": {
          "areaCode": {
            "type": "string",
            "description": "This is the area code of the phone number to purchase.",
            "minLength": 3,
            "maxLength": 3
          },
          "name": {
            "type": "string",
            "description": "This is the name of the phone number. This is just for your own reference.",
            "maxLength": 40
          },
          "assistantId": {
            "type": "string",
            "description": "This is the assistant that will be used for incoming calls to this phone number.\n\nIf this is not set, then the phone number will not handle incoming calls."
          }
        },
        "required": ["areaCode"]
      },
      "PhoneNumber": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the phone number."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this phone number belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the phone number was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the phone number was last updated."
          },
          "stripeSubscriptionId": {
            "type": "string",
            "description": "This is the subscription for the phone number."
          },
          "stripeSubscriptionStatus": {
            "type": "string",
            "description": "This is the subscription's status."
          },
          "stripeSubscriptionCurrentPeriodStart": {
            "format": "date-time",
            "type": "string",
            "description": "This is the subscription's current period start."
          },
          "number": {
            "type": "string",
            "description": "These are the digits of the phone number."
          },
          "twilioAccountSid": {
            "type": "string",
            "description": "This is the Twilio Account SID for the phone number.\n\nThis is for numbers not bought on Vapi."
          },
          "twilioAuthToken": {
            "type": "string",
            "description": "This is the Twilio Auth Token for the phone number.\n\nThis is for numbers not bought on Vapi."
          },
          "name": {
            "type": "string",
            "description": "This is the name of the phone number. This is just for your own reference.",
            "maxLength": 40
          },
          "assistantId": {
            "type": "string",
            "description": "This is the assistant that will be used for incoming calls to this phone number.\n\nIf this is not set, then the phone number will not handle incoming calls."
          }
        },
        "required": ["id", "orgId", "createdAt", "updatedAt", "number"]
      },
      "UpdatePhoneNumberDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "This is the name of the phone number. This is just for your own reference.",
            "maxLength": 40
          },
          "assistantId": {
            "type": "string",
            "description": "This is the assistant that will be used for incoming calls to this phone number.\n\nIf this is not set, then the phone number will not handle incoming calls."
          }
        }
      }
    }
  }
}
